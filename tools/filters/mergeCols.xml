<tool id="mergeCols1" name="Merger des colonnes" version="1.0.1">
  <description>ensemble</description>
  <command interpreter="python">
   mergeCols.py 
      $input1
      $out_file1
      $col1
      $col2
      #for $col in $columns
        ${col.datacol}
      #end for
  </command>
  <inputs>
    <param format="tabular" name="input1" type="data" label="Selection du jeu de données" help="Jeu de données non présent dans la liste ? Voir ASTUCE ci-dessous."/>
    <param name="col1" label="Merger les colonnes" type="data_column" data_ref="input1" />
    <param name="col2" label="avec les colonnes" type="data_column" data_ref="input1" help="Besoin d'ajouter des colonnes ? Utiliser les options ci-dessous."/>
    <repeat name="columns" title="Columns">
      <param name="datacol" label="Ajouter la colonne" type="data_column" data_ref="input1" />
    </repeat>
  </inputs>
  <outputs>
    <data format="tabular" name="out_file1" />
  </outputs>
  <tests>
    <test>
      <param name="input1" value="1.bed"/>
      <param name="col1" value="4" />
      <param name="col2" value="1" />
      <param name="datacol" value="6" />
      <output name="out_file1" file="mergeCols.dat"/>
    </test>
  </tests>
<help>

.. class:: infomark

**ASTUCE:** Si vos données ne sont pas au format tabulé, utilisez l'outil *Manipulation de texte-&gt;Convertir*

-----

**Ce que fait l'outil**

Cet outil merge les colonnes ensemble. Any number of valid columns can be merged in any order.

-----

**Exemple**

Input dataset (five columns: c1, c2, c3, c4, and c5)::

   1 10   1000  gene1 chr
   2 100  1500  gene2 chr

merging columns "**c5,c1**" will return::

   1 10   1000  gene1 chr chr1
   2 100  1500  gene2 chr chr2

.. class:: warningmark
   
Note that all original columns are preserved and the result of merge is added as the rightmost column.
  </help>
</tool>
