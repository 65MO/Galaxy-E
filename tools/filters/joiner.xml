<tool id="join1" name="Joindre 2 jeux de données" version="2.0.2">
  <description>l'un à côté de l'autre par un champ spécifique</description>
  <command interpreter="python">join.py $input1 $input2 $field1 $field2 $out_file1 $unmatched $partial --index_depth=3 --buffer=50000000 --fill_options_file=$fill_options_file</command>
  <inputs>
    <param format="tabular" name="input1" type="data" label="Joindre"/>
    <param name="field1" label="en utilisant cette colonne" type="data_column" data_ref="input1" />
    <param format="tabular" name="input2" type="data" label="avec" />
    <param name="field2" label="en utilisant cette colonne" type="data_column" data_ref="input2" />
    <param name="unmatched" type="select" label="Conserver les lignes du premier jeu de données qui ne se retrouvent pas dans le second">
      <option value="-u">Oui</option>
      <option value="" selected="true">Non</option>
    </param>
    <param name="partial" type="select" label="Conserver les lignes du premier jeu de données qui sont incomplètes">
      <option value="-p">Oui</option>
      <option value="" selected="true">Non</option>
    </param>
    <conditional name="fill_empty_columns">
      <param name="fill_empty_columns_switch" type="select" label="Remplir les colonnes vides">
        <option value="no_fill" selected="True">Non</option>
        <option value="fill_empty">Oui</option>
      </param>
     <when value="no_fill">
        <!-- do nothing -->
     </when>
     <when value="fill_empty">
       <param type="select" name="fill_columns_by" label="Remplir seulement les lignes non correspondantes">
         <option value="fill_unjoined_only" selected="True">Oui</option>
         <option value="fill_all">Non</option>
       </param>
       <conditional name="do_fill_empty_columns">
         <param name="column_fill_type" type="select" label="Remplir les colonnes par">
           <option value="single_fill_value" selected="True">Valeur simple</option>
           <option value="fill_value_by_column">Valeurs par colonne</option>
         </param>
         <when value="single_fill_value">
           <param type="text" name="fill_value" label="Remplir avec la valeur" value="."/>
         </when>
         <when value="fill_value_by_column">
           <repeat name="column_fill1" title="Remplir la colonne du jeu de données 1">
             <param name="column_number1" label="Colonne" type="data_column" data_ref="input1" />
             <param type="text" name="fill_value1" value="."/>
           </repeat>
           <repeat name="column_fill2" title="Remplir la colonne du jeu de données 2">
             <param name="column_number2" label="Colonne" type="data_column" data_ref="input2" />
             <param type="text" name="fill_value2" value="."/>
           </repeat>
         </when>
       </conditional>
     </when>
   </conditional>
  </inputs>
  <configfiles>
    <configfile name="fill_options_file">&lt;%
import json
%&gt;
#set $__fill_options = {}
#if $fill_empty_columns['fill_empty_columns_switch'] == 'fill_empty':
    #set $__fill_options['fill_unjoined_only'] = $fill_empty_columns['fill_columns_by'].value == 'fill_unjoined_only'
    #if $fill_empty_columns['do_fill_empty_columns']['column_fill_type'] == 'single_fill_value':
        #set $__start_fill = $fill_empty_columns['do_fill_empty_columns']['fill_value'].value
    #else:
        #set $__start_fill = ""
    #end if
    #set $__fill_options['file1_columns'] = [ __start_fill for i in range( int( $input1.metadata.columns ) ) ]
    #set $__fill_options['file2_columns'] = [ __start_fill for i in range( int( $input2.metadata.columns ) ) ]
    #if $fill_empty_columns['do_fill_empty_columns']['column_fill_type'] == 'fill_value_by_column':
        #for column_fill1 in $fill_empty_columns['do_fill_empty_columns']['column_fill1']:
            #set $__fill_options['file1_columns'][ int( column_fill1['column_number1'].value ) - 1 ] = column_fill1['fill_value1'].value
        #end for
        #for column_fill2 in $fill_empty_columns['do_fill_empty_columns']['column_fill2']:
            #set $__fill_options['file2_columns'][ int( column_fill2['column_number2'].value ) - 1 ] = column_fill2['fill_value2'].value
        #end for
    #end if
#end if
${json.dumps( __fill_options )}
    </configfile>
  </configfiles>
  <outputs>
     <data format="input" name="out_file1" metadata_source="input1" />
  </outputs>
  <tests>
    <test>
      <param name="input1" value="1.bed"/>
      <param name="input2" value="2.bed"/>
      <param name="field1" value="2"/>
      <param name="field2" value="2"/>
      <param name="unmatched" value=""/>
      <param name="partial" value=""/>
      <param name="fill_empty_columns_switch" value="no_fill"/>
      <output name="out_file1" file="joiner_out1.bed"/>
    </test>
    <test>
      <param name="input1" value="1.bed"/>
      <param name="input2" value="2.bed"/>
      <param name="field1" value="2"/>
      <param name="field2" value="2"/>
      <param name="unmatched" value="Yes"/>
      <param name="partial" value="Yes"/>
      <param name="fill_empty_columns_switch" value="no_fill"/>
      <output name="out_file1" file="joiner_out2.bed"/>
    </test>
    <test>
      <param name="input1" value="1.bed"/>
      <param name="input2" value="2.bed"/>
      <param name="field1" value="2"/>
      <param name="field2" value="2"/>
      <param name="unmatched" value="Yes"/>
      <param name="partial" value="Yes"/>
      <param name="fill_empty_columns_switch" value="fill_empty"/>
      <param name="fill_columns_by" value="fill_all"/>
      <param name="column_fill_type" value="single_fill_value"/>
      <param name="fill_value" value="~"/>
      <output name="out_file1" file="joiner_out3.bed"/>
    </test>
    <test>
      <param name="input1" value="1.bed"/>
      <param name="input2" value="2.bed"/>
      <param name="field1" value="2"/>
      <param name="field2" value="2"/>
      <param name="unmatched" value="Yes"/>
      <param name="partial" value="Yes"/>
      <param name="fill_empty_columns_switch" value="fill_empty"/>
      <param name="fill_columns_by" value="fill_all"/>
      <param name="column_fill_type" value="fill_value_by_column"/>
      <param name="column_number1" value="6"/>
      <param name="fill_value1" value="+"/>
      <param name="column_number2" value="1"/>
      <param name="fill_value2" value="NoChrom"/>
      <output name="out_file1" file="joiner_out4.bed"/>
    </test>
  </tests>
  <help>

.. class:: warningmark

**Cet outil tentera de réutiliser les métadonnées du premier jeu de données.** Afin de modifier l'assignement des métadonnées, il faut cliquer sur le lien "éditer les attributs" de l'item généré dans l'historique.

.. class:: infomark

**ASTUCE:** Si vos données ne sont pas au format tabulé, utilisez l'outil *Manipulation de texte-&gt;Convertir*

-----

**Syntaxe**

Cet outil joint les lignes de deux jeux de données en un champ commun. Une chîne de caractères vide ("") ne constitue pas un identifieur valide.
Vous pouvez choisir d'inclure les lignes de votre premier jeu de données qui ne correspondent pas au second jeu de données.

- Les colonnes sont référencées avec un **nombre**. Par exemple, **3** indique la troisième colonne d'un fichier délimité par des tabulations.

-----

**Exemple**

Jeu de données 1::

  chr1 10 20 geneA 
  chr1 50 80 geneB
  chr5 10 40 geneL

Jeu de données 2::

  geneA tumor-supressor
  geneB Foxp2
  geneC Gnas1
  geneE INK4a

En joignant la colonne 4 du Jeu de données 1 avec la première colonne du Jeu de données 2, vous obtiendrez la génération du jeu de données suivant::

  chr1 10 20 geneA geneA tumor-suppressor
  chr1 50 80 geneB geneB Foxp2

En joignant la colonne 4 du Jeu de données 1 avec la première colonne du Jeu de données 2, en conservant toutes les lignes du jeu de données 1, vous obtiendrez la génération du jeu de données suivant::

  chr1 10 20 geneA geneA tumor-suppressor
  chr1 50 80 geneB geneB Foxp2
  chr5 10 40 geneL

</help>
</tool>
