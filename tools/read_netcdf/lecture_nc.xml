<tool id="lec_nc" name="Netcdf Read" version="0.1.0">
    <requirements>
        <requirement type="package" version="2.1.0">matplotlib</requirement>
        <requirement type="package" version="1.3.1">netCDF4</requirement>
        <requirement type="package" version="1.0.0">scipy</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        python $__tool_directory__/lec_general_ncdf.py $input
        $var_tab $var
        #for $i,$uc in enumerate($user_choice)
            ${uc.dim} ${uc.comparator} ${uc.value}
        #end for 
        #if $condi_coord.coord=='yes_cust_coord'
            $condi_coord.lat_dim $condi_coord.lat_val $condi_coord.lon_dim $condi_coord.lon_val
        #end if
        &&
        cat header | sed 's/array(\[//g' | sed 's/], dtype=float32)//g'| sed 's/,\s/_/g' | sed 's/(//g' | sed 's/)//g' > header_cleaned
        &&
        cat header_cleaned sortie.tabular > supersortie.tabular
        &&
        bash $__tool_directory__/transpose.sh
        &&
        sed 's/_/\t/g' supersortie_transposed.tabular > 1 && mv 1 supersortie_transposed.tabular
        &&
        cat header_names supersortie_transposed.tabular >temp.tabular
        && sed 's/\s/\t/g' temp.tabular > final.tabular



    ]]></command>
    <inputs>
        <param type="data" name="input" label="Input netcdf file" format="netcdf"/>
        <param type="data" label="Tabular of variables" name="var_tab" format="tabular" help="Select the tabular file which summarize the available variables and dimensions."/>

        <param name="var" type="select" label="Chose the variable to extract">
            <options from_dataset="var_tab">
                <column name="name" index="0"/>
                <column name="value" index="0"/>
                <column name="n_dim" index="1"/>
            </options>
        </param>
        <param type="data" label="Tabular of dimensions" name="dim_tab" format="tabular" help="Netcdf Info on data X (dimensions_myVariable)"/>
        
        <conditional name="condi_coord">
            <param name="coord" type="boolean" label="Search values for custom coordinates" truevalue="yes_cust_coord" checked="true" falsevalue="nope" help="Use this option to get valid values at your custom coordinates. If only NA values are availables the tool will search for the next closest coordinate until valid values."/>
            <when value="yes_cust_coord">
                <param name="lat_dim" type="select" label="Select latitude" >
                    <options from_dataset="dim_tab">
                        <column name="value" index="0"/>
                    </options>
                </param>
                <param name="lat_val" type="float" value="0" label="Latitude"/>
                <param name="lon_dim" type="select" label="Select longitude" >
                    <options from_dataset="dim_tab">
                        <column name="value" index="0"/>
                    </options>
                </param>
                <param name="lon_val" type="float" value="0" label="Longitude"/>
            </when>
            <when value="nope"></when>
        </conditional>
        <repeat name="user_choice" title="Filter">
            <param name="dim" type="select" label="Dimensions">
                <options from_dataset="dim_tab">
                    <column name="value" index="0"/>
                </options>
            </param>
            <param name="comparator" type="select" label="Comparator">
                <option value="e">Equal</option>
                <option value="g">Greater</option>
                <option value="ge">Greater or equal</option>
                <option value="l">Less</option>
                <option value="le">Less or equal</option>
                <!-- <option value="a">All</option> -->
            </param>
            <param name="value" type="float" value="0" label="Value"/>
        </repeat>



    </inputs>        
    <outputs>
        <data name="output" format="tabular" label="Values from ${input.name}" from_work_dir="final.tabular"/>
    </outputs>
    <tests>
        <test>
             <param name="input" value="dataset-ibi-reanalysis-bio-005-003-monthly-regulargrid_1510914389133.nc"/>
             <param name="var_tab" value="var_tab_dataset-ibi"/>
             <param name="var" value="phy"/>
             <param name="dim_tab" value="tab_dim_phy_dataset-ibi"/>
             <param name="coord" value="yes_cut_coord"/>
             <param name="lat_dim" value="latitude"/>
             <param name="lat_val" value="44.0"/>
             <param name="lon_dim" value="longitude"/>
             <param name="lon_val" value="-2.0"/>
             <param name="output" value="Test1.tabular"/>
        </test>
        <test>
             <param name="input" value="dataset-ibi-reanalysis-bio-005-003-monthly-regulargrid_1510914389133.nc"/>
             <param name="var_tab" value="var_tab_dataset-ibi"/>
             <param name="var" value="nh4"/>
             <param name="dim_tab" value="tab_dim_nh4_dataset-ibi"/>
             <param name="coord" value="nope"/>
             <param name="dim" value="time"/>
             <param name="comparator" value="e"/>
             <param name="value" value="7272.0"/>
             <param name="dim" value="latitude"/>
             <param name="comparator" value="ge"/>
             <param name="value" value="45.0"/>
             <param name="output" value="Test2.tabular"/>
        </test>




    </tests>

    <help><![CDATA[
The Netcdf Read tool can be used after the Netcdf Info. 

Values for each variable can be extract with custom conditions on dimensions.

Eg every valid values for Var1 at time T latitude 45 longitude -3.
    ]]></help>
</tool>
